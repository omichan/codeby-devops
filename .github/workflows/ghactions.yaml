---
name: lesson28-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
    branches:
      - lesson28
env:
  ProjName1: Hello Devops
  ProjName2: Hello Jenkins
  ProjName3: Hello World
  projPath: lesson28/
  ProjDir1: lesson28/Hello Devops
  ProjDir2: lesson28/Hello Jenkins
  ProjDir3: lesson28/Hello World
  stageName1: stageHD
  stageName2: stageHJ
  stageName3: stageHW
jobs:
  build_app_hd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: lesson28
          show-progress: ""
          sparse-checkout: |
            lesson28
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: "17"
      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build project
        run: mvn -B package --file "${{ env.ProjDir1 }}/pom.xml"
      - name: Build project
        run: mvn -B package --file "${{ env.ProjDir2 }}/pom.xml"
      - name: Build project
        run: mvn -B package --file "${{ env.ProjDir3 }}/pom.xml"
  publish-job:
    runs-on: ubuntu-latest
    needs:
      - build_app_hd
    steps:
      - uses: actions/checkout@v4
        with:
          ref: lesson28
          show-progress: ""
          sparse-checkout: |
            lesson28
      - uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: "17"
      - run: mvn -B package --file "${{ env.ProjDir1 }}/pom.xml" -DskipTests
      - run: mvn -B package --file "${{ env.ProjDir2 }}/pom.xml" -DskipTests
      - run: mvn -B package --file "${{ env.ProjDir3 }}/pom.xml" -DskipTests
      - run: mkdir ${{ env.stageName1 }}  && cp "${{ env.ProjDir1 }}/target"/*.jar ${{ env.stageName1 }}
      - run: mkdir ${{ env.stageName2 }}  && cp "${{ env.ProjDir2 }}/target"/*.jar ${{ env.stageName2 }}
      - run: mkdir ${{ env.stageName3 }}  && cp "${{ env.ProjDir3 }}/target"/*.jar ${{ env.stageName3 }}
      - uses: actions/upload-artifact@v4
        with:
          name: Hello Devops Package
          path: ${{ env.stageName1 }}
      - uses: actions/upload-artifact@v4
        with:
          name: Hello Jenkins Package
          path: ${{ env.stageName2 }}
      - uses: actions/upload-artifact@v4
        with:
          name: Hello World Package
          path: ${{ env.stageName3 }}
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: lesson28/hello_devops
            dockerfile: lesson28/Dockerfile1
          - image: lesson28/hello_jenkins
            dockerfile: lesson28/Dockerfile2
          - image: lesson28/hello_world
            dockerfile: lesson28/Dockerfile3
    steps:
      - uses: actions/checkout@v4
        with:
          ref: lesson28
          show-progress: ""
          sparse-checkout: |
            lesson28
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
