# Default values for wordpress.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  #repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: "wp"
fullnameOverride: "wordpress"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "cdbservice"
  namespace: default

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  className: ""
  ServiceName: 
  servicePort:
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  type: pvc
  enabled: false
  # storageClassName: default
  accessModes:
    - ReadWriteOnce
  size: 100Mi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection
  # selectorLabels: {}
  ## Sub-directory of the PV to mount. Can be templated.
  # subPath: ""
  ## Name of an existing PVC. Can be templated.
  # existingClaim:
  ## Extra labels to apply to a PVC.
  extraPvcLabels: {}
  disableWarning: false
  
StorageClass:
  name: local-storage
  volumeBindingMode: WaitForFirstConsumer
  storageClassName: local-storage
  reclaimPolicy: Delete
  accessModes: ReadWriteOnce
  provisioner: kubernetes.io/no-provisioner
  
networkPolicy:
  enabled: true
  namespace: default
  ingress: true
  selectorForApp: sql
  selectorFromApp: wp
    
DeployCfgWP:
  imagetag: wordpress:php8.1-apache
  repository: wordpress
  port: 80
  resources:
    requests:
      cpu: 100m
      memory: 500Mi
  PVenabled: true
  mountPath: /var/www/html
  svcType: NodePort
  svcPort: 80
  svcTargPort: 80
  svcNodePort: 31180
  pvcMode: ReadWriteOnce
  pvcSize: 100Mi
  pvcSelectorLabel: wordpress
  pvPath: /mnt/wstore
  
secretParams:
  dbName: wp
  dbUser: root
  dbHost: sql-svc.default.svc.cluster.local
  runDir: /var/run/apache2
  secRefName: wp-secret
  secRefKey: password
  

global:
  storageClassName: wp-store